export default {
  app: {
    title: "Bonita",
    description: "Bonita Frontend Application",
  },
  navitems: {
    dashboard: "Dashboard",
    records: "Records",
    tasks: "Tasks",
    scraping: "Scraping",
    metadata: "Metadata",
    mediaitems: "Media Items",
    tools: "Tools",
    serviceSettings: "Service Settings",
    userSettings: "User Settings",
  },
  common: {
    save: "Save",
    cancel: "Cancel",
    confirm: "Confirm",
    delete: "Delete",
    edit: "Edit",
    add: "Add",
    search: "Search",
    back: "Back",
    submit: "Submit",
    loading: "Loading...",
    noData: "No Data",
    success: "Success",
    failed: "Failed",
    unknown: "Unknown",
    yes: "Yes",
    no: "No",
    all: "All",
    more: "More",
    refresh: "Refresh",
    next: "Next",
    prev: "Previous",
    optional: "Optional",
    required: "Required",
    saveChanges: "Save Changes",
    reset: "Reset",
    editTitle: "Edit",
    addTitle: "Add",
    actions: "Actions",
  },
  auth: {
    login: "Login",
    logout: "Logout",
    register: "Register",
    username: "Username",
    password: "Password",
    email: "Email",
    forgotPassword: "Forgot Password",
    rememberMe: "Remember Me",
    loginSuccess: "Login Successful",
    loginFailed: "Login Failed",
    invalidCredentials: "Invalid username or password",
    welcomeMessage: "Please log in to your account to start the adventure",
    enterEmail: "Please enter email",
    enterPassword: "Please enter password",
    changePassword: "Change Password",
    currentPassword: "Current Password",
    newPassword: "New Password",
    confirmPassword: "Confirm New Password",
    passwordRequirements: "Password Requirements:",
    passwordMinLength: "Minimum 8 characters long - the more, the better",
  },
  menu: {
    home: "Home",
    dashboard: "Dashboard",
    settings: "Settings",
    profile: "Profile",
    users: "User Management",
    roles: "Role Management",
    permissions: "Permission Management",
  },
  language: {
    zh: "Chinese",
    en: "English",
    switchSuccess: "Language switched successfully",
  },
  time: {
    today: "Today",
    yesterday: "Yesterday",
    tomorrow: "Tomorrow",
    day: "Day",
    week: "Week",
    month: "Month",
    year: "Year",
    hour: "Hour",
    minute: "Minute",
    second: "Second",
  },
  errors: {
    networkError: "Network error, please check your network connection",
    serverError: "Server error, please try again later",
    notFound: "Resource not found",
    forbidden: "Access forbidden",
    unauthorized: "Unauthorized access",
    timeout: "Request timeout",
    unknown: "Unknown error",
  },
  validation: {
    required: "{field} cannot be empty",
    minLength: "{field} must be at least {length} characters",
    maxLength: "{field} cannot exceed {length} characters",
    email: "Please enter a valid email address",
    url: "Please enter a valid URL",
    numeric: "Please enter a number",
    alpha: "Only letters are allowed",
    alphaNum: "Only letters and numbers are allowed",
  },
  pages: {
    dashboard: {
      title: "Dashboard",
      activeTasks: "Active Tasks",
      noRunningTasks: "No tasks currently running",
      taskName: "Task Name",
      status: "Status",
      source: "Source",
      destination: "Destination",
      unknownTask: "Unknown Task",
      running: "Running",
    },
    task: {
      title: "Task",
      addTask: "Add Task",
      runNow: "Run Now",
      running: "Running",
      delete: "Delete",
      directoryHint:
        "Enter specific directory to run, or leave empty to run entire task",
    },
    metadata: {
      title: "Metadata",
      addNew: "Add New",
      search: "Search by number or actor...",
      number: "Number",
      metadataTitle: "Title",
      actor: "Actor",
      tag: "Tag",
      update: "Update",
      cover: "Cover",
      noResults:
        "No metadata found. Try adjusting your search or add new metadata.",
      itemsPerPage: "Items per page",
      totalItems: "Total {count} items",
      editMetadata: "Edit Metadata",
      addMetadata: "Add Metadata",
    },
    tools: {
      title: "Tools",
      importNfo: {
        title: "Import Metadata from NFO",
        subtitle: "Import movie metadata information from NFO files",
        folder: "NFO Folder",
        folderPlaceholder: "Example: D:\\Movies\\NFO",
        importMethod: "Import Method",
        ignoreExisting: "Ignore Existing Data",
        forceUpdate: "Force Update",
        startImport: "Start Import",
        folderRequired: "Please enter folder path",
      },
      syncEmby: {
        title: "Sync Emby Watch History",
        subtitle:
          "Synchronize watch history from Emby server to local database",
        startSync: "Start Sync",
      },
      cleanup: {
        title: "Clean Orphaned Records",
        subtitle: "Clean records and related torrent files where actual files no longer exist (deleted for more than 7 days)",
        forceOption: "Force Delete",
        startCleanup: "Start Cleanup"
      },
    },
    serviceSettings: {
      title: "Service Settings",
      proxy: {
        title: "Proxy Settings",
        subtitle:
          "The proxy configured here will be used for application network requests",
        http: "HTTP Proxy",
        https: "HTTPS Proxy",
        httpsPlaceholder: "Example: http://127.0.0.1:7890",
        enable: "Enable Proxy",
        save: "Save Settings",
      },
      emby: {
        title: "Emby API Settings",
        subtitle: "Configure Emby server API connection parameters",
        server: "Emby Server",
        serverPlaceholder: "Example: http://emby.example.com:8096",
        user: "Username",
        userPlaceholder: "Emby Username",
        apiKey: "API Key",
        apiKeyPlaceholder: "Emby API Key",
        save: "Save Settings",
        test: "Test Connection",
        saveSuccess: "Emby settings saved successfully",
        saveError: "Failed to save Emby settings, please try again later",
        testError:
          "Connection test failed, please check your settings and network",
        connectionSuccess: "Connection successful!",
        connectionError: "Connection failed!",
        enable: "Enable Emby Integration",
      },
      jellyfin: {
        title: "Jellyfin API Settings",
        subtitle: "Configure Jellyfin server API connection parameters",
        server: "Jellyfin Server",
        serverPlaceholder: "Example: http://jellyfin.example.com:8096",
        apiKey: "API Key",
        apiKeyPlaceholder: "Jellyfin API Key",
        save: "Save Settings",
        test: "Test Connection",
        saveSuccess: "Jellyfin settings saved successfully",
        saveError: "Failed to save Jellyfin settings, please try again later",
        testError:
          "Connection test failed, please check your settings and network",
        connectionSuccess: "Connection successful!",
        connectionError: "Connection failed!",
        enable: "Enable Jellyfin Integration",
      },
      transmission: {
        title: "Transmission Client Settings",
        subtitle: "Configure Transmission torrent client connection parameters",
        server: "Server Address",
        serverPlaceholder: "Example: http://192.168.1.100:9091/transmission/rpc",
        username: "Username",
        usernamePlaceholder: "Transmission Username",
        password: "Password",
        passwordPlaceholder: "Transmission Password",
        pathMappingFrom: "Path Mapping Source",
        pathMappingFromPlaceholder: "Example: /downloads (Docker container path)",
        pathMappingTo: "Path Mapping Target",
        pathMappingToPlaceholder: "Example: /volume1/downloads (Host machine path)",
        save: "Save Settings",
        test: "Test Connection",
        saveSuccess: "Transmission settings saved successfully",
        saveError: "Failed to save Transmission settings, please try again later",
        testError: "Connection test failed, please check your settings and network",
        connectionSuccess: "Connection successful!",
        connectionError: "Connection failed!",
        enable: "Enable Transmission Integration",
      },
    },
    userSettings: {
      title: "User Settings",
      tabs: {
        security: "Security",
      },
    },
    records: {
      title: "Records",
      edit: "Edit Record",
      search: "Search Filename",
      filterTaskId: "Filter Task ID",
      deleteSelected: "Delete Selected ({count})",
      nameFilter: "Filename",
      taskIdFilter: "Task ID",
      clearFilters: "Clear All Filters",
      itemsPerPage: "Items per page",
      totalRecords: "Total {count} records",
      name: "Name",
      path: "Path",
      destPath: "Destination Path",
      season: "Season",
      episode: "Episode",
      number: "Number",
      tag: "Tag",
      updateTime: "Update Time",
      deadTime: "Dead Time",
      actions: "Actions",
      refreshOn: "Auto-refresh is on",
      refreshOff: "Auto-refresh is off",
      manualRefresh: "Refresh now",
      newData: "New data available",
      nextRefresh: "Next refresh in {seconds}s",
      deleteDialog: {
        title: "Confirm Delete",
        message:
          "Are you sure you want to delete {count} selected records? This action cannot be undone.",
        forceDelete: "Force Delete (Ignore Lock Status)",
        cancel: "Cancel",
        confirm: "Delete",
      },
    },
    scraping: {
      title: "Scraping Configuration",
      edit: "Edit Configuration",
      add: "Add Configuration",
    },
    mediaitem: {
      title: "Media Items",
      addNew: "Add New Item",
      search: "Search title...",
      clean: "Clean Duplicates",
      originalTitle: "Original Title",
      mediaType: "Media Type",
      number: "Number",
      watched: "Watched",
      unwatched: "Unwatched",
      watchedStatus: "Watch Status",
      numberStatus: "Number Status",
      favorite: "Favorite",
      notFavorite: "Not Favorite",
      favoriteStatus: "Favorite Status",
      allFavorites: "All Status",
      allTypes: "All Types",
      movie: "Movie",
      tvshow: "TV Show",
      allWatched: "All Status",
      allItems: "All Items",
      hasNumber: "Has Number",
      noNumber: "No Number",
      imdbId: "IMDB ID",
      tmdbId: "TMDB ID",
      tvdbId: "TVDB ID",
      seasonNumber: "Season Number",
      episodeNumber: "Episode Number",
      noResults:
        "No media items found. Try adjusting your search or add new items.",
      itemsPerPage: "Items per page",
      totalItems: "Total {count} items",
      editMediaItem: "Edit Media Item",
      addMediaItem: "Add Media Item",
      sortTitle: "Title",
      sortUpdatetime: "Update Time",
      sortCreatetime: "Create Time",
    },
  },
  components: {
    metadata: {
      dialog: {
        editTitle: "Edit Metadata",
        addTitle: "Add Metadata",
      },
      form: {
        number: "Number",
        title: "Title",
        studio: "Studio",
        release: "Release Date",
        year: "Year",
        runtime: "Runtime",
        genre: "Genre",
        rating: "Rating",
        language: "Language",
        country: "Country",
        outline: "Outline",
        director: "Director",
        actor: "Actor",
        actorPhoto: "Actor Photo",
        cover: "Cover",
        coverSmall: "Small Cover",
        extraFanart: "Extra Fanart",
        trailer: "Trailer",
        tag: "Tag",
        label: "Label",
        series: "Series",
        userRating: "User Rating",
        userVotes: "User Votes",
        detailUrl: "Detail URL",
        site: "Site",
        required: "Required",
        validation: {
          numberRequired: "Number is required",
          titleRequired: "Title is required",
        },
        uploadCover: "Upload Cover",
        selectImage: "Select Image",
        imageTypeError: "Please select an image file (JPEG, PNG, etc.).",
        uploadError: "Failed to upload image. Please try again.",
        uploadSuccess:
          "Image uploaded successfully, but could not determine path. Check the console for details.",
        save: "Save",
        cancel: "Cancel",
      },
    },
    common: {
      confirmation: {
        title: "Confirmation",
        cancelText: "Cancel",
        confirmText: "Confirm",
      },
    },
    record: {
      dialog: {
        editTitle: "Edit Record",
      },
      form: {
        transferRecord: "Transfer Record",
        sourceName: "Source Name",
        sourcePath: "Source Path",
        destinationPath: "Destination Path",
        isEpisode: "Is Episode",
        season: "Season",
        episode: "Episode",
        status: "Status",
        ignored: "Ignored",
        extraInfo: "Extra Info",
        number: "Number",
        tags: "Tags",
        tagsPlaceholder: "Separate multiple tags with commas",
        tagsHint: "Example: Chinese subtitles, cracked",
        partNumber: "Part Number",
        specifiedSource: "Specified Source",
        specifiedUrl: "Specified URL",
        save: "Save",
        cancel: "Cancel",
        seasonRule: "Season must be -1 or greater",
        episodeRule: "Episode must be -1 or greater",
        partNumberRule: "Part number must be 0 or greater",
        topFolder: "Top Folder",
        applyAll: "Apply All",
        topFolderUpdateSuccess:
          "Top folder updated successfully for all matching records",
        topFolderUpdateError: "Failed to update top folder, please try again",
        topFolderMissingData: "Source folder or top folder value is missing",
        taskId: "Task ID",
        selectTask: "Select a task",
      },
    },
    task: {
      dialog: {
        editTitle: "Edit Task",
        addTitle: "Add Task",
      },
      form: {
        name: "Name",
        description: "Description",
        contentType: "Content Type",
        movie: "Movie",
        series: "Series",
        sourceFolder: "Source Folder",
        outputFolder: "Output Folder",
        operation: "Operation",
        hardLink: "Hard Link",
        softLink: "Soft Link",
        move: "Move",
        copy: "Copy",
        autoWatch: "Auto Watch",
        cleanOthers: "Clean Others",
        enableScraping: "Enable Scraping",
        scrapingId: "Scraping ID",
        selectScraping: "Select scraping setting",
        scrapingHint:
          'If you cannot find the desired configuration here, please add it in "Scraping" section',
        enabled: "Enabled",
        optimizeName: "Optimize Name",
        failedFolder: "Failed Folder",
        escapeFolder: "Escape Folder",
        escapeLiterals: "Escape Literals",
        escapeSize: "Escape Size",
        submit: "Submit",
      },
    },
    scraping: {
      dialog: {
        editTitle: "Edit Scraping Config",
        addTitle: "Add Scraping Config",
      },
      form: {
        name: "Name",
        description: "Description",
        saveMetadata: "Save Metadata",
        namingRule: "Naming Rule",
        scrapingSites: "Scraping Sites",
        locationRule: "Location Rule",
        maxTitleLength: "Max Title Length",
        moreStoryline: "More Storyline",
        extraFanartEnabled: "Extra Fanart Enabled",
        extraFanartFolder: "Extra Fanart Folder",
        watermarkEnabled: "Watermark Enabled",
        watermarkSize: "Watermark Size",
        watermarkLocation: "Watermark Location",
        submit: "Submit",
        reset: "Reset",
      },
    },
    fileBrowser: {
      title: "File Browser",
      currentPath: "Current Path",
      upOneLevel: "Up",
      refresh: "Refresh",
      cancel: "Cancel",
      noFiles: "No files found in this directory",
      loadError: "Error loading files from this directory",
      selectCurrentFolder: "Select This Folder",
      confirm: "Confirm",
      selectedItem: "Selected Item",
      folderSelected: "(Folder Selected)",
    },
  },
}
